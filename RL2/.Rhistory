data <- read.csv("Языки.csv", header = TRUE, sep = ",")
data <- data[, -1]
head(data)
ratings <- data[, -1]
summary_stats <- data.frame(
Language = colnames(ratings),
Max = apply(ratings, 2, max),
Min = apply(ratings, 2, min),
Mean = apply(ratings, 2, mean)
)
summary_stats
normalized <- ratings / 10
high_pref <- colSums(normalized > 0.7)
low_pref <- colSums(normalized < 0.3)
preferences <- data.frame(
Language = colnames(ratings),
High_Preference = high_pref,
Low_Preference = low_pref
)
print(preferences)
avg_scores <- colMeans(ratings)
ranking <- sort(avg_scores, decreasing = TRUE)
ranking
round(ranking, 2)
barplot(
avg_scores,
main = "Средние оценки языков программирования",
col = rainbow(length(avg_scores)),
las = 2,
ylab = "Средняя оценка"
)
barplot(
10,
main = "Средние оценки языков программирования",
col = rainbow(length(avg_scores)),
las = 2,
ylab = "Средняя оценка"
)
barplot(
avg_scores,
main = "Средние оценки языков программирования",
col = rainbow(length(avg_scores)),
las = 2,
ylab = "Средняя оценка"
)
barplot(
avg_scores,
main = "Средние оценки языков программирования",
col = rainbow(length(avg_scores)),
las = 3,
ylab = "Средняя оценка"
)
barplot(
avg_scores,
main = "Средние оценки языков программирования",
col = rainbow(length(avg_scores)),
las = 6,
ylab = "Средняя оценка"
)
barplot(
avg_scores,
main = "Средние оценки языков программирования",
col = rainbow(length(avg_scores)),
las = 5,
ylab = "Средняя оценка"
)
barplot(
avg_scores,
main = "Средние оценки языков программирования",
col = rainbow(length(avg_scores)),
las = 3,
ylab = "Средняя оценка"
)
csv_data <- read.csv("Языки.csv", header = TRUE, sep = ",")
# Просмотр первых строк
head(csv_data)
# Убираем столбцы с фамилией и временем
ratings <- csv_data[, -c(1, 2)]
# Описательная статистика
summary(ratings)
# Средние, медианы, стандартное отклонение
mean_values <- colMeans(ratings, na.rm = TRUE)
median_values <- apply(ratings, 2, median, na.rm = TRUE)
sd_values <- apply(ratings, 2, sd, na.rm = TRUE)
# Собираем в таблицу
desc_stats <- data.frame(
Language = colnames(ratings),
Mean = mean_values,
Median = median_values,
SD = sd_values
)
print(desc_stats)
sorted_by_python <- csv_data[order(csv_data$Python, decreasing = TRUE), ]
sorted_by_python
# Поднабор
python_high <- subset(csv_data, Python > 7)
# Размерность
dim(python_high)
# Статистика поднабора
summary(python_high)
library(ggplot2)
# Гистограмма
ggplot(python_high, aes(x = Python)) +
geom_histogram(fill = "steelblue", bins = 10, alpha = 0.7) +
labs(title = "Рис.1. Гистограмма оценок Python", x = "Оценка", y = "Количество") +
theme_minimal()
# Боксплот
ggplot(python_high, aes(y = Python)) +
geom_boxplot(fill = "orange", color = "black") +
labs(title = "Рис.2. Боксплот оценок Python", y = "Оценка") +
theme_minimal()
# Гистограмма
ggplot(python_high, aes(x = Python)) +
geom_histogram(fill = "steelblue", bins = 10, alpha = 0.7) +
labs(title = "Рис.1. Гистограмма оценок Python", x = "Оценка", y = "Количество") +
theme_minimal()
# Боксплот
ggplot(python_high, aes(y = Python)) +
geom_boxplot(fill = "orange", color = "black") +
labs(title = "Рис.2. Боксплот оценок Python", y = "Оценка") +
theme_minimal()
##part 2
csv_data <- read.csv("data.csv", stringsAsFactors = FALSE)
##part 2
csv_data <- read.csv("Языки.csv", stringsAsFactors = FALSE)
csv_data <- csv_data[,-1]
str(csv_data)
summary(csv_data)
##part 2
csv_data <- read.csv("Языки.csv")
csv_data <- csv_data[,-1]
str(csv_data)
summary(csv_data)
##part 2
csv_data <- read.csv("Языки.csv")
csv_data <- csv_data[,-с(1,1)]
##part 2
csv_data <- read.csv("Языки.csv")
csv_data <- csv_data[,-1]
csv_data <- csv_data[,-1]
str(csv_data)
summary(csv_data)
num_data <- csv_data[, !(names(csv_data) %in% c("Timestamp", "Name"))]
mean_values <- colMeans(num_data, na.rm = TRUE)
median_values <- apply(num_data, 2, median, na.rm = TRUE)
min_values <- apply(num_data, 2, min, na.rm = TRUE)
max_values <- apply(num_data, 2, max, na.rm = TRUE)
sd_values <- apply(num_data, 2, sd, na.rm = TRUE)
print(mean_values)
print(median_values)
print(min_values)
print(max_values)
print(sd_values)
# 3. Сортировка по выбранному признаку (например, по Python)
sorted_data <- csv_data[order(-csv_data$Python), ]
# 4. Формируем подмножество (выбираем студентов, оценивших Python > 7)
high_python <- csv_data[csv_data$Python > 7, ]
# Подсчет размерности
print(dim(high_python))
# Гистограмма оценок Python
hist(csv_data$Python, breaks = 10, col = "blue", main = "Рис.1. Распределение оценок Python", xlab = "Оценка", ylab = "Количество студентов")
# Boxplot для Python
boxplot(csv_data$Python, main = "Рис.2. Boxplot для оценок Python", ylab = "Оценка Python", col = "lightblue")
##part 2
csv_data <- read.csv("Языки.csv")
csv_data
timename <- subset(csv_data, select = c(Отметка.времени, ФИО))
timename
csv_data
##part 2
csv_data <- read.csv("Языки.csv")
csv_data
timename <- subset(csv_data, select = c(Отметка.времени, ФИО))
csv_data <- csv_data[,-1]
csv_data <- csv_data[,-1]
str(csv_data)
summary(csv_data)
analisys = data.frame(
MEAN = mean_values,
MEDIAN = median_values,
MIN = min_values,
MAX = max_values,
SD = sd_values
)
analisys
analisys = data.frame(
LANGUAGE = timename[2]
MEAN = mean_values,
analisys = data.frame(
LANGUAGE = timename[2],
MEAN = mean_values,
MEDIAN = median_values,
MIN = min_values,
MAX = max_values,
SD = sd_values
)
analisys = data.frame(
LANGUAGE = timename[,2],
MEAN = mean_values,
MEDIAN = median_values,
MIN = min_values,
MAX = max_values,
SD = sd_values
)
analisys = data.frame(
LANGUAGE = timename[,-1],
MEAN = mean_values,
MEDIAN = median_values,
MIN = min_values,
MAX = max_values,
SD = sd_values
)
analisys = data.frame(
MEAN = mean_values,
MEDIAN = median_values,
MIN = min_values,
MAX = max_values,
SD = sd_values
)
analisys
sorted_data
sorted_data <- csv_data[order(-csv_data[,"Python"]), ]
sorted_data
hist(csv_data$Python, breaks = 10, col = "blue", main = "Рис.1. Распределение оценок Python", xlab = "Оценка", ylab = "Количество студентов")
##part 2
csv_data <- read.csv("Языки.csv")
csv_data
time <- subset(csv_data, Отметка.времени)
time <- subset(csv_data, select = Отметка.времени)
##part 2
csv_data <- read.csv("Языки.csv")
csv_data
time <- subset(csv_data, select = Отметка.времени)
num_data <- csv_data[,-1]
num_data <- num_data[,-1]
##part 2
csv_data <- read.csv("Языки.csv")
csv_data
timest <- subset(csv_data, select = Отметка.времени)
num_data <- csv_data[,-1]
num_data <- num_data[,-1]
csv_data
num_data
timest
##part 2
csv_data <- read.csv("Языки.csv")
csv_data
timename <- subset(csv_data, select = c(Отметка.времени, ФИО))
num_data <- csv_data[,-1]
num_data <- num_data[,-1]
csv_data
num_data
##part 2
csv_data <- read.csv("Языки.csv")
csv_data
timename <- subset(csv_data, select = c(Отметка.времени, ФИО))
csv_data <- csv_data[,-1]
num_data <- csv_data[,-1]
csv_data
num_data
timename
sorted_data <- csv_data[order(-csv_data[,"Python"]), ]
sorted_data
high_python <- subset(csv_data, Python > 7)
print(dim(high_python))
high_python
# Boxplot для Python
boxplot(csv_data$Python, main = "Рис.2. Boxplot для оценок Python", ylab = "Оценка Python", col = "lightblue")
merged_data <- merge(csv_data, timename, by = "ФИО", all.x = TRUE)
merged_data
new_row <- data.frame(Timestamp = Sys.time(), Name = "Новый студент", Python = 9, R = 8, Java = 7)
csv_data <- rbind(csv_data, new_row)
csv_data <- subset(csv_data, select = -Отметка.времени)
merged_data <- subset(csv_data, select = -Отметка.времени)
merged_data <- subset(merged_data, select = -Отметка.времени)
##part 2
csv_data <- read.csv("Языки.csv")
csv_data
timename <- subset(csv_data, select = c(Отметка.времени, ФИО))
csv_data <- csv_data[,-1]
num_data <- csv_data[,-1]
csv_data
num_data
timename
mean_values <- colMeans(num_data)
median_values <- apply(num_data, 2, median)
min_values <- apply(num_data, 2, min)
max_values <- apply(num_data, 2, max)
sd_values <- apply(num_data, 2, sd)
analisys = data.frame(
MEAN = mean_values,
MEDIAN = median_values,
MIN = min_values,
MAX = max_values,
SD = sd_values
)
analisys
sorted_data <- csv_data[order(-csv_data[,"Python"]), ]
sorted_data
high_python <- subset(csv_data, Python > 7)
print(dim(high_python))
hist(csv_data[, "Python"], breaks = 10, col = "blue", main = "Рис.1. Распределение оценок Python", xlab = "Оценка", ylab = "Количество студентов")
boxplot(csv_data$Python, main = "Рис.2. Boxplot для оценок Python", ylab = "Оценка Python", col = "lightblue")
boxplot(csv_data, main = "Рис.3. Boxplot для оценок всех языков", ylab = "Оценка языков", col = "lightgreen")
boxplot(num_data, main = "Рис.3. Boxplot для оценок всех языков", ylab = "Оценка языков", col = "lightgreen")
merged_data <- merge(csv_data, timename, by = "ФИО", all.x = TRUE)
merged_data
new_row <- data.frame(Timestamp = Sys.time(), Name = "Новый студент", Python = 9, R = 8, Java = 7)
csv_data <- rbind(csv_data, new_row)
new_row_data <- [1:10]
new_row_data <- (1:10)
new_row <- data.frame(Timestamp = Sys.time(), Name = "Новый студент", new_row_data)
csv_data <- rbind(csv_data, new_row)
##part 2
csv_data <- read.csv("Языки.csv")
csv_data
timename <- subset(csv_data, select = c(Отметка.времени, ФИО))
csv_data <- csv_data[,-1]
num_data <- csv_data[,-1]
csv_data
num_data
timename
calculate_mode <- function(x) {
unique_x <- unique(x)
unique_x[which.max(tabulate(match(x, unique_x)))]
}
mean_values <- colMeans(num_data)
median_values <- apply(num_data, 2, median)
min_values <- apply(num_data, 2, min)
max_values <- apply(num_data, 2, max)
sd_values <- apply(num_data, 2, sd)
mode_values <- apply(num_data, 2, calculate_mode)
analisys = data.frame(
MEAN = mean_values,
MEDIAN = median_values,
MIN = min_values,
MAX = max_values,
SD = sd_values,
MODE = mode_values
)
analisys
